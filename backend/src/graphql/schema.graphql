type Query {
  tags: [Tag!]!
  songs(list: [ID!]!): [Song]!
  allSongs: [Song!]!
  tag(id: ID!): Tag 
}

type Mutation {
  editSong(song: EditSongInput!): Boolean!
  newSong(song: NewSongInput!): ID
}

type Tag {
  id: ID!
  name: String!
  songs: [Song!]!
  cover: String
}

type SongMetadata {
  audio: String
  fontSize: Float
  paragraphSpace: Float
  titleSpace: Float
  spotify: String
}

type Song {
  id: ID!
  author: String!
  title: String!
  textWithChords: String!
  tags: [Tag!]!
  metadata: SongMetadata!
}

input NewSongInput {
  author: String!
  title: String!
  textWithChords: String!
  tags: [ID!]!
  metadata: SongMetadataInput!
}

input EditSongInput {
  id: ID!
  author: String
  title: String
  textWithChords: String
  tags: [ID!]
  metadata: SongMetadataInput
}

input SongMetadataInput {
  audio: String
  fontSize: Float
  paragraphSpace: Float
  titleSpace: Float
  spotify: String
}
